import webapp2


form="""
<form method="post">
    Signup
    <br>
    <label>Username <input type="text" name="username"></label>
    <label>Password <input type="text" name="password"</label>
    <label>Verify Password <input type="text" name="verify password"</label>
    <label>Email (Optional) <input type="text" name="email"</label>
    <div style="color: red">%(error)s</div>
    <br>
    <br>
    <input type="submit">
</form>
"""

class MainPage(webapp2.RequestHandler):
    def write_form(self, error=""):
        self.response.out.write(form % {"error": error})

    def get(self):
        self.response.out.write(form)

        USER_RE = re.compile(r"^[a-zA-Z0-9_-]{3,20}$")
        def valid_username(username):
            return username and USER_RE.match(username)

        PASS_RE = re.compile(r"^.{3,20}$")
        def valid_password(password):
            return password and PASS_RE.match(password)

        EMAIL_RE = re.compile(r'^[\S]@[\S]+\[\S]+$')
        def valid_email(email):
            return not email or EMAIL_RE.match(email)

        class Signup(BaseHandler):

            def get(self):
                self.write_form()

            def post(self):
                have_error = False
                username = self.request.get("username")
                password = self.request.get("password")
                verify = self.request.get("verify")
                email =self.request.get("email")

                params = dict(username = username,
                                email = email)

                if not valid_username(username):
                    params['error_username'] = "That's not a valid username."
                    have_error = True

                if not valid_password(password):
                    params['error_password'] = "That's not a valid password"
                    have_error = True
                elif password != verify:
                    params['error_verify'] = "Your passwords didn't match"
                    have_error = True

                if not valid_email(email):
                    params['error_mail'] = "That's not a valid email"
                    have_error = True

app = webapp2.WSGIApplication([('/', MainPge)],
                              debug=True)
